
给你两个字符串 haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串的第一个匹配项的下标（下标从 0 开始）。如果 needle 不是 haystack 的一部分，则返回  -1 。
Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
class Solution {
    public int strStr(String haystack, String needle) {
        int n = haystack.length(), m = needle.length();
        if(m == 0) return 0;
        int[] pi = computeLPS(needle);
        for(int i = 0, j = 0; i< n; i++){
            while(j>0 && haystack.charAt(i) != needle.charAt(j)){
                j = pi[j-1];
            }
            if(haystack.charAt(i) == needle.charAt(j)){
                j++;
            }
            if(j == m){
                return i - m +1;
            }
        }
        return -1;
    }

    private int[] computeLPS(String pattern){
        int m = pattern.length();
        int[] pi = new int[m];
        for(int i =1, j = 0; i < m; i++){
            while(j> 0 && pattern.charAt(i) != pattern.charAt(j)){
                j= pi[j-1];
            }
            if(pattern.charAt(i) == pattern.charAt(j)){
                j++;
            }
            pi[i]=j;
        }
        return pi;
    }
}