 160. 相交链表
 给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。

 图示两个链表在节点 c1 开始相交：

 题目数据 保证 整个链式结构中不存在环。

 注意，函数返回结果后，链表必须 保持其原始结构。

 Given the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. If the two linked lists have no intersection at all, return null.

 For example, the following two linked lists begin to intersect at node c1:

 The test cases are generated such that there are no cycles anywhere in the entire linked structure.

 Note that the linked lists must retain their original structure after the function returns. 
 
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null) return null;

        ListNode pointA = headA;
        ListNode pointB = headB;

        while(pointA != pointB) {
            if (pointA == null) {
                pointA = headB;
            }else {
                pointA = pointA.next;
            }

            if (pointB == null) {
                pointB = headA;
            }else {
                pointB = pointB.next;
            }  

        }
        return pointA;
    }
    
}